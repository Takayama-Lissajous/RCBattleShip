TMS320C6x C/C++ Optimizer               v8.1.0
Build Number 1PLQV-2LI-UARAR-TAR-C08D
Making tomp_invalidatePrefetchBuffer a function synonym of CSL_XMC_invalidatePrefetchBuffer
Making tomp_semAcquire a function synonym of AcquireSpinLock
Making tomp_semRelease a function synonym of ReleaseSpinLock
Making tomp_eventPushToHead a function synonym of queuePush

		======File-level Analysis Summary======


static unsigned char AcquireSpinLock() is called from 1 sites in this file.
    It appears to be inlineable (size = 13 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void CACHE_AsmNop() is called from 4 sites in this file.
    It appears to be inlineable (size = 5 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static enum $$fake217 CACHE_getL2Size() is called from 1 sites in this file.
    It appears to be inlineable (size = 5 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void CACHE_invAllL2() is called from 1 sites in this file.
    It appears to be inlineable (size = 36 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	_restore_interrupts() (1 times)
	CACHE_AsmNop() (1 times)
	CACHE_invAllL2Wait() (1 times)
	CSL_XMC_invalidatePrefetchBuffer() (1 times)
	_disable_interrupts() (1 times)

static void CACHE_invAllL2Wait() is called from 1 sites in this file.
    It appears to be inlineable (size = 13 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void CACHE_wbInvAllL1d() is called from 1 sites in this file.
    It appears to be inlineable (size = 36 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	_restore_interrupts() (1 times)
	CACHE_AsmNop() (1 times)
	CACHE_wbInvAllL1dWait() (1 times)
	CSL_XMC_invalidatePrefetchBuffer() (1 times)
	_disable_interrupts() (1 times)

static void CACHE_wbInvAllL1dWait() is called from 1 sites in this file.
    It appears to be inlineable (size = 13 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void CACHE_wbInvL1d() is called from 1 sites in this file.
    It appears to be inlineable (size = 60 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	_restore_interrupts() (1 times)
	CACHE_AsmNop() (1 times)
	CACHE_wbInvL1dWait() (1 times)
	_mfence() (1 times)
	CSL_XMC_invalidatePrefetchBuffer() (1 times)
	_disable_interrupts() (1 times)

static void CACHE_wbInvL1dWait() is called from 1 sites in this file.
    It appears to be inlineable (size = 13 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void CACHE_wbInvL2() is called from 1 sites in this file.
    It appears to be inlineable (size = 60 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	_restore_interrupts() (1 times)
	CACHE_AsmNop() (1 times)
	CACHE_wbInvL2Wait() (1 times)
	_mfence() (1 times)
	CSL_XMC_invalidatePrefetchBuffer() (1 times)
	_disable_interrupts() (1 times)

static void CACHE_wbInvL2Wait() is called from 1 sites in this file.
    It appears to be inlineable (size = 13 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void CSL_XMC_invalidatePrefetchBuffer() is called from 5 sites in this file.
    It appears to be inlineable (size = 4 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

extern void GOMP_task() is called from 0 sites in this file.
    It has 4 non-trivial scope blocks nested 4 deep.
    It calls these functions:
	tomp_taskCleanup() (1 times)
	GOMP_taskwait() (1 times)
	 ? () (1 times)
	tomp_cacheWbInvAll() (1 times)
	tomp_eventPushToHead() (1 times)
	tomp_mfence() (1 times)
	tomp_taskInitArgBuffer() (1 times)
	tomp_taskInit() (2 times)
	tomp_event_pointer() (1 times)
	tomp_mutex_unlock() (1 times)
	tomp_mutex_lock() (1 times)
	tomp_eventAlloc() (1 times)

extern void GOMP_taskwait() is called from 1 sites in this file.
    It appears to be inlineable (size = 53 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_cacheWbInvAll() (1 times)
	tomp_dispatch_once() (1 times)
	tomp_cacheWbInv() (2 times)
	tomp_isPtrCached() (1 times)

static void ReleaseSpinLock() is called from 1 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void acquire_dsp_queue_lock() is called from 1 sites in this file.
    It appears to be inlineable (size = 11 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_semAcquire() (1 times)

static void *queuePop() is called from 1 sites in this file.
    It appears to be inlineable (size = 41 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	queue_lock_release() (1 times)
	tomp_logError() (1 times)
	queue_lock_acquire() (1 times)

static void queuePush() is called from 1 sites in this file.
    It appears to be inlineable (size = 40 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_logError() (1 times)
	queue_lock_release() (1 times)
	queue_lock_acquire() (1 times)

static int queuePushDesc() is called from 1 sites in this file.
    It appears to be inlineable (size = 32 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_logError() (1 times)
	queue_lock_release() (1 times)
	queue_lock_acquire() (1 times)

static void queue_lock_acquire() is called from 3 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	acquire_dsp_queue_lock() (1 times)

static void queue_lock_release() is called from 3 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	release_dsp_queue_lock() (1 times)

static void release_dsp_queue_lock() is called from 1 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_semRelease() (1 times)
	tomp_mfence() (1 times)

static void tomp_cacheWbInv() is called from 4 sites in this file.
    It appears to be inlineable (size = 21 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	_restore_interrupts() (1 times)
	tomp_mfence() (1 times)
	tomp_invalidatePrefetchBuffer() (1 times)
	CACHE_wbInvL2() (1 times)
	CACHE_wbInvL1d() (1 times)
	_disable_interrupts() (1 times)

static void tomp_cacheWbInvAll() is called from 4 sites in this file.
    It appears to be inlineable (size = 15 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	_restore_interrupts() (1 times)
	tomp_invalidatePrefetchBuffer() (1 times)
	CACHE_invAllL2() (1 times)
	CACHE_getL2Size() (1 times)
	tomp_mfence() (2 times)
	CACHE_wbInvAllL1d() (1 times)
	_disable_interrupts() (1 times)

extern void tomp_eoStartTaskX() is called from 0 sites in this file.
    It appears to be inlineable (size = 48 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_taskCleanup() (1 times)
	tomp_logError() (2 times)
	 ? () (1 times)
	tomp_cacheWbInvAll() (2 times)
	tomp_event_pointer() (1 times)

static void *tomp_eventAlloc() is called from 1 sites in this file.
    It appears to be inlineable (size = 5 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	queuePop() (1 times)

static void tomp_eventFree() is called from 1 sites in this file.
    It appears to be inlineable (size = 7 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	queuePushDesc() (1 times)

static void tomp_eventPushToHead() is called from 1 sites in this file.
    It appears to be inlineable (size = 6 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	queuePush() (1 times)

static void *tomp_event_pointer() is called from 2 sites in this file.
    It appears to be inlineable (size = 3 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void tomp_invalidatePrefetchBuffer() is called from 2 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	CSL_XMC_invalidatePrefetchBuffer() (1 times)

static unsigned char tomp_isPtrCached() is called from 3 sites in this file.
    It appears to be inlineable (size = 30 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void tomp_logDebug1() is called from 0 sites in this file.
    It appears to be inlineable (size = 1 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void tomp_logDebug2() is called from 0 sites in this file.
    It appears to be inlineable (size = 1 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void tomp_logDebug3() is called from 0 sites in this file.
    It appears to be inlineable (size = 1 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void tomp_logError() is called from 6 sites in this file.
    It appears to be inlineable (size = 20 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	exit() (1 times)
	tomp_sendExitEvents() (1 times)
	printf() (1 times)

static void tomp_mfence() is called from 6 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void tomp_mutex_lock() is called from 2 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_semAcquire() (2 times)

static void tomp_mutex_unlock() is called from 2 sites in this file.
    It appears to be inlineable (size = 5 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_semRelease() (1 times)
	tomp_mfence() (1 times)

static unsigned char tomp_semAcquire() is called from 3 sites in this file.
    It appears to be inlineable (size = 4 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	AcquireSpinLock() (1 times)

static void tomp_semRelease() is called from 2 sites in this file.
    It appears to be inlineable (size = 4 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	ReleaseSpinLock() (1 times)

static void tomp_taskCleanup() is called from 2 sites in this file.
    It appears to be inlineable (size = 54 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_mutex_unlock() (1 times)
	tomp_taskFree() (2 times)
	tomp_cacheWbInv() (2 times)
	tomp_isPtrCached() (2 times)
	tomp_mutex_lock() (1 times)

static void tomp_taskFree() is called from 2 sites in this file.
    It appears to be inlineable (size = 12 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_eventFree() (1 times)
	tomp_taskFreeArgBuffer() (1 times)

static void tomp_taskFreeArgBuffer() is called from 1 sites in this file.
    It appears to be inlineable (size = 17 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	free() (1 times)

static void tomp_taskInit() is called from 2 sites in this file.
    It appears to be inlineable (size = 33 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void tomp_taskInitArgBuffer() is called from 1 sites in this file.
    It appears to be inlineable (size = 43 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	memcpy() (1 times)
	tomp_logError() (1 times)
	malloc() (1 times)

>>>> WARNING - Function tomp_logDebug1() is not called and will not be compiled

>>>> WARNING - Function tomp_logDebug2() is not called and will not be compiled

>>>> WARNING - Function tomp_logDebug3() is not called and will not be compiled


These functions may be recursive:
	GOMP_task()
	tomp_eventPushToHead()
	queuePush()
	tomp_taskInitArgBuffer()
	tomp_eventAlloc()
	queuePop()
	GOMP_taskwait()
	tomp_eoStartTaskX()
	tomp_taskCleanup()
	tomp_taskFree()
	tomp_eventFree()
	queuePushDesc()
	tomp_cacheWbInv()
	CACHE_wbInvL2()
	CACHE_wbInvL1d()
	tomp_logError()
	tomp_cacheWbInvAll()
	CACHE_invAllL2()
	CACHE_wbInvAllL1d()

Results of interprocedural value propagation:

   static void tomp_taskInit() has these parameter attributes:
      unsigned kind :     kind <= 2u;  kind >= 1u;

Function tomp_mutex_unlock() will be specialized on these parameters:
	[1] lock == (unsigned)tomp_gvCoreConfig.hw_sem_base_idx+3u;

Results of interprocedural value propagation:

   static void tomp_mutex_unlock() has these parameter attributes:
      unsigned lock :     lock <= 258u;  lock >= 3u;

Function tomp_cacheWbInv() will be specialized on these parameters:
	[2] byteCnt == 52u;

Results of interprocedural value propagation:

   static void tomp_cacheWbInv() has these parameter attributes:
      unsigned byteCnt :  byteCnt == 52u;

Function CACHE_wbInvL2() will be specialized on these parameters:
	[2] byteCnt == 52u;
	[3] wait == 0u;

Results of interprocedural value propagation:

   static void CACHE_wbInvL2() has these parameter attributes:
      unsigned byteCnt :  byteCnt == 52u;
      unsigned wait :     wait == 0u;

Function CACHE_wbInvL1d() will be specialized on these parameters:
	[2] byteCnt == 52u;
	[3] wait == 0u;

Results of interprocedural value propagation:

   static void CACHE_wbInvL1d() has these parameter attributes:
      unsigned byteCnt :  byteCnt == 52u;
      unsigned wait :     wait == 0u;

Function tomp_mutex_lock() will be specialized on these parameters:
	[1] lock == (unsigned)tomp_gvCoreConfig.hw_sem_base_idx+3u;

Results of interprocedural value propagation:

   static void tomp_mutex_lock() has these parameter attributes:
      unsigned lock :     lock <= 258u;  lock >= 3u;

Results of interprocedural value propagation:

   static void tomp_logError() has these parameter attributes:
      unsigned e :        e%4u == 2u;  e <= 6u;  e >= 2u;
      int line :          line%2 == 1;  line <= 339;  line >= 105;

Function CACHE_invAllL2() will be specialized on these parameters:
	[1] wait == 0u;

Results of interprocedural value propagation:

   static void CACHE_invAllL2() has these parameter attributes:
      unsigned wait :     wait == 0u;

Function CACHE_wbInvAllL1d() will be specialized on these parameters:
	[1] wait == 0u;

Results of interprocedural value propagation:

   static void CACHE_wbInvAllL1d() has these parameter attributes:
      unsigned wait :     wait == 0u;
Inlineable function will be suppressed: tomp_eventPushToHead()
Inlineable function will be suppressed: tomp_event_pointer()
Inlineable function will be suppressed: tomp_semRelease()
Inlineable function will be suppressed: tomp_semAcquire()
Inlineable function will be suppressed: tomp_invalidatePrefetchBuffer()
Inlineable function will be suppressed: queue_lock_acquire()
Inlineable function will be suppressed: queue_lock_release()
Inlineable function will be suppressed: CACHE_wbInvAllL1d()
Inlineable function will be suppressed: CACHE_invAllL2()
Inlineable function will be suppressed: tomp_mutex_unlock()
Inlineable function will be suppressed: CACHE_wbInvL2()
Inlineable function will be suppressed: CACHE_wbInvL1d()
Inlineable function will be suppressed: CSL_XMC_invalidatePrefetchBuffer()
Inlineable function will be suppressed: CACHE_getL2Size()
Inlineable function will be suppressed: tomp_eventAlloc()
Inlineable function will be suppressed: tomp_eventFree()
Inlineable function will be suppressed: CACHE_AsmNop()
Inlineable function will be suppressed: ReleaseSpinLock()
Inlineable function will be suppressed: tomp_mutex_lock()
Inlineable function will be suppressed: release_dsp_queue_lock()
Inlineable function will be suppressed: AcquireSpinLock()
Inlineable function will be suppressed: tomp_mfence()
Inlineable function will be suppressed: acquire_dsp_queue_lock()
Inlineable function will be suppressed: CACHE_wbInvL2Wait()
Inlineable function will be suppressed: CACHE_wbInvL1dWait()
Inlineable function will be suppressed: CACHE_invAllL2Wait()
Inlineable function will be suppressed: CACHE_wbInvAllL1dWait()
Inlineable function will be suppressed: tomp_taskFree()
Inlineable function will be suppressed: tomp_taskFreeArgBuffer()
Inlineable function will be suppressed: tomp_cacheWbInvAll()
Inlineable function will be suppressed: tomp_cacheWbInv()
Inlineable function will be suppressed: tomp_taskInit()
Inlineable function will be suppressed: tomp_isPtrCached()

These external functions are called but not defined here:
	malloc()
	memcpy()
	free()
	printf()
	exit()
	tomp_sendExitEvents()
	tomp_dispatch_once()
	 ? ()
	_mfence()
	_disable_interrupts()
	_restore_interrupts()


		======= End file-level Analysis =======


==============================================================================

static void tomp_logError() is called from 6 sites in this file.
    It appears to be inlineable (size = 20 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are -1 memory accesses with 0 dependences.


==============================================================================

static int queuePushDesc() is called from 1 sites in this file.
    It appears to be inlineable (size = 32 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	queue_lock_acquire() (1 times)
	queue_lock_release() (1 times)
	tomp_logError() (1 times)

There are 9 memory accesses with 13 dependences.


==============================================================================

static void tomp_taskCleanup() is called from 2 sites in this file.
    It appears to be inlineable (size = 54 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_mutex_lock() (1 times)
	tomp_isPtrCached() (2 times)
	tomp_cacheWbInv() (2 times)
	tomp_taskFree() (2 times)
	tomp_mutex_unlock() (1 times)

There are 39 memory accesses with 345 dependences.


==============================================================================

extern void tomp_eoStartTaskX() is called from 0 sites in this file.
    It appears to be inlineable (size = 48 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_event_pointer() (1 times)
	tomp_cacheWbInvAll() (2 times)
	tomp_logError() (2 times)
	tomp_taskCleanup() (1 times)

There are 20 memory accesses with 78 dependences.


==============================================================================

extern void GOMP_taskwait() is called from 1 sites in this file.
    It appears to be inlineable (size = 53 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_isPtrCached() (1 times)
	tomp_cacheWbInv() (2 times)
	tomp_cacheWbInvAll() (1 times)

There are 28 memory accesses with 185 dependences.


==============================================================================

static void *queuePop() is called from 1 sites in this file.
    It appears to be inlineable (size = 41 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	queue_lock_acquire() (1 times)
	tomp_logError() (1 times)
	queue_lock_release() (1 times)

There are 11 memory accesses with 17 dependences.


==============================================================================

static void tomp_taskInitArgBuffer() is called from 1 sites in this file.
    It appears to be inlineable (size = 43 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_logError() (1 times)

There are 4 memory accesses with 3 dependences.


==============================================================================

static void queuePush() is called from 1 sites in this file.
    It appears to be inlineable (size = 40 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	queue_lock_acquire() (1 times)
	queue_lock_release() (1 times)
	tomp_logError() (1 times)

There are 11 memory accesses with 21 dependences.


==============================================================================

extern void GOMP_task() is called from 0 sites in this file.
    It has 4 non-trivial scope blocks nested 4 deep.
    It calls these functions:
	tomp_eventAlloc() (1 times)
	tomp_mutex_lock() (1 times)
	tomp_mutex_unlock() (1 times)
	tomp_event_pointer() (1 times)
	tomp_taskInit() (2 times)
	tomp_taskInitArgBuffer() (1 times)
	tomp_mfence() (1 times)
	tomp_eventPushToHead() (1 times)
	tomp_cacheWbInvAll() (1 times)
	GOMP_taskwait() (1 times)
	tomp_taskCleanup() (1 times)

There are 54 memory accesses with 330 dependences.


== END OF INFO OUTPUT==
