TMS320C6x C/C++ Optimizer               v8.1.0
Build Number 1PLQV-2LI-UARAR-TAR-C08D
Making tomp_semAcquire a function synonym of AcquireSpinLock
Making tomp_semRelease a function synonym of ReleaseSpinLock
Making tomp_exitGlobalNRT a function synonym of tomp_closeQueues

		======File-level Analysis Summary======


static unsigned char AcquireSpinLock() is called from 1 sites in this file.
    It appears to be inlineable (size = 13 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void ReleaseSpinLock() is called from 1 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

extern void __TI_omp_get_qmss_memory_regions() is called from 0 sites in this file.
    It appears to be inlineable (size = 1 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

extern void __TI_omp_update_qmss_memory_regions() is called from 0 sites in this file.
    It appears to be inlineable (size = 1 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void acquire_dsp_queue_lock() is called from 1 sites in this file.
    It appears to be inlineable (size = 11 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_semAcquire() (1 times)

static struct $$fake0 *queueAlloc() is called from 5 sites in this file.
    It appears to be inlineable (size = 8 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void queueClose() is called from 0 sites in this file.
    It appears to be inlineable (size = 1 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void queueEmpty() is called from 10 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	queue_lock_release() (1 times)
	queue_lock_acquire() (1 times)

static void queuePush() is called from 1 sites in this file.
    It appears to be inlineable (size = 40 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_logError() (1 times)
	queue_lock_release() (1 times)
	queue_lock_acquire() (1 times)

static void queue_lock_acquire() is called from 2 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	acquire_dsp_queue_lock() (1 times)

static void queue_lock_release() is called from 2 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	release_dsp_queue_lock() (1 times)

static void release_dsp_queue_lock() is called from 1 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_semRelease() (1 times)
	tomp_mfence() (1 times)

extern void tomp_closeQueues() is called from 1 sites in this file.
    It appears to be inlineable (size = 45 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_resetQueues() (1 times)
	queueEmpty() (5 times)

extern void tomp_exitGlobalNRT() is called from 0 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_closeQueues() (1 times)

extern unsigned char tomp_initGlobalNRT() is called from 0 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_mfence() (1 times)
	tomp_openQueues() (1 times)
	tomp_resetQueues() (1 times)

extern unsigned char tomp_initLocalNRT() is called from 0 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void tomp_logError() is called from 1 sites in this file.
    It appears to be inlineable (size = 20 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	exit() (1 times)
	tomp_sendExitEvents() (1 times)
	printf() (1 times)

static void tomp_mfence() is called from 2 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static unsigned char tomp_openQueues() is called from 1 sites in this file.
    It appears to be inlineable (size = 93 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	queuePush() (1 times)
	queueEmpty() (5 times)
	queueAlloc() (5 times)

static void tomp_resetQueues() is called from 2 sites in this file.
    It appears to be inlineable (size = 4 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static unsigned char tomp_semAcquire() is called from 1 sites in this file.
    It appears to be inlineable (size = 4 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	AcquireSpinLock() (1 times)

static void tomp_semRelease() is called from 1 sites in this file.
    It appears to be inlineable (size = 4 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	ReleaseSpinLock() (1 times)

>>>> WARNING - Function queueClose() is not called and will not be compiled


These functions may be recursive:
	tomp_initGlobalNRT()
	tomp_openQueues()
	queuePush()
	tomp_logError()

Function tomp_logError() will be specialized on these parameters:
	[1] e == 6u;
	[3] line == 137;

Results of interprocedural value propagation:

   static void tomp_logError() has these parameter attributes:
      unsigned e :        e == 6u;
      int line :          line == 137;
Inlineable function will be suppressed: tomp_semAcquire()
Inlineable function will be suppressed: tomp_semRelease()
Inlineable function will be suppressed: queue_lock_acquire()
Inlineable function will be suppressed: queue_lock_release()
Inlineable function will be suppressed: queueAlloc()
Inlineable function will be suppressed: ReleaseSpinLock()
Inlineable function will be suppressed: queueEmpty()
Inlineable function will be suppressed: release_dsp_queue_lock()
Inlineable function will be suppressed: AcquireSpinLock()
Inlineable function will be suppressed: tomp_mfence()

These external functions are called but not defined here:
	printf()
	exit()
	tomp_sendExitEvents()


		======= End file-level Analysis =======


==============================================================================

extern unsigned char tomp_initLocalNRT() is called from 0 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are -1 memory accesses with 0 dependences.


==============================================================================

static void tomp_resetQueues() is called from 2 sites in this file.
    It appears to be inlineable (size = 4 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are -1 memory accesses with 0 dependences.


==============================================================================

static void acquire_dsp_queue_lock() is called from 1 sites in this file.
    It appears to be inlineable (size = 11 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_semAcquire() (1 times)

There are -1 memory accesses with 0 dependences.


==============================================================================

static void tomp_logError() is called from 1 sites in this file.
    It appears to be inlineable (size = 20 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are -1 memory accesses with 0 dependences.


==============================================================================

static void queuePush() is called from 1 sites in this file.
    It appears to be inlineable (size = 40 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	queue_lock_acquire() (1 times)
	queue_lock_release() (1 times)
	tomp_logError() (1 times)

There are 10 memory accesses with 17 dependences.


==============================================================================

static unsigned char tomp_openQueues() is called from 1 sites in this file.
    It appears to be inlineable (size = 93 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	queueAlloc() (5 times)
	queueEmpty() (5 times)
	queuePush() (1 times)

There are 32 memory accesses with 187 dependences.


==============================================================================

extern unsigned char tomp_initGlobalNRT() is called from 0 sites in this file.
    It appears to be inlineable (size = 9 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_resetQueues() (1 times)
	tomp_openQueues() (1 times)
	tomp_mfence() (1 times)

There are -1 memory accesses with 0 dependences.


==============================================================================

extern void tomp_closeQueues() is called from 1 sites in this file.
    It appears to be inlineable (size = 45 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	queueEmpty() (5 times)
	tomp_resetQueues() (1 times)

There are 27 memory accesses with 165 dependences.


==============================================================================

extern void tomp_exitGlobalNRT() is called from 0 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	tomp_closeQueues() (1 times)

There are -1 memory accesses with 0 dependences.


==============================================================================

extern void __TI_omp_update_qmss_memory_regions() is called from 0 sites in this file.
    It appears to be inlineable (size = 1 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are -1 memory accesses with 0 dependences.


==============================================================================

extern void __TI_omp_get_qmss_memory_regions() is called from 0 sites in this file.
    It appears to be inlineable (size = 1 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are -1 memory accesses with 0 dependences.


== END OF INFO OUTPUT==
