* Device Tree 란 무엇인가 ?

FPGA 와 유사하게 Description Language 개념이 적용된 것임
좀 더 구체적으로 HW(SoC, Board) 에 대한 정보를 기술함
이와 대비되는 방식으로 기존에 사용하던
Platform Device 기반의 Board 기술 방식이 존재함



* 기존 방식의 문제점

1. SoC 혹은 Board 별로 독자적 코드를 구현해야함
2. 같은 SoC 에서 파생된 보드 간에 상호 연관성이 있지만
   이를 전혀 고려하지 않고 별도로 구현함
3. 2 번의 문제로 코드의 복잡도가 증가하고 코드 크기가 증가함
   arch/arm/mach-{TARGET}/board-*.c 파일이 매우 복잡해짐
4. 보드 구성이 바뀌더라도 Kernel Code 를 수정하지 않고
   동작할 수 있는 방식의 필요성 인식
5. Device Tree 는 기존에 다른쪽(CPU)에서 사용하던 방식으로 ARM 도 채택!



* Device Tree 에서 장치 표현 방식

1. Device 는 노드로 표현하며(ex: node@0),
   각각의 노드는 다양한 속성 정보를 갖는다.
   각각의 Device 는 서로 다른 속성 정보(ex: address, interrupt 등)을 가짐
   특히 compatible 속성은 Device Driver 와 연결되는 부분으로
   Device Driver Code 에서 관련 compatible string 을 검색해보면
   연결된 platform driver 를 찾을 수 있다.

2. node@ 뒤에 붙는 숫자는 unit address 로
   Device 에 접근하기 위해 사용되는 1 차 주소이고
   Node 내의 reg 속성에 나열되어 있는 정보에 해당한다.
   unit address 는 UART0, UART1 과 같이 동일한 장치가 여러개 있을 경우
   각각의 장치를 정확하게 판별하기 위해 사용한다.

3. 노드내에 또 다른 노드가 올 수 있다.
   Device Controller 와 연결된 Slave 인 Device 라고 생각하면 되겠다.

4. 노드는 앞 부분에 별칭(alias)을 붙일 수 있으며
   다른 노드에서 이 별칭을 활용하여 해당 노드를 참조하는데
   이때 & 기호를 사용한다(ex: &node3)

5. 실제로 매우 다양한 장치가 있어서
   독자적 Device 를 표현하기 위해서 bindings 문서를 잘 정리해야함
   실제 AM5728 에서 제공하는 dts 파일을 살펴보면 도움이 많이됨

추후 AM5728 Kernel 디렉토리에서 arch/arm/boot/dts/am57xx-evm-reva3.dts
를 살펴보면 Device Tree 를 이해하는데 보다 도움이 될 것이다.



* Device Tree 의 전체 구조

1. 확장자가 dtsi 인 파일은 SoC 를 표현하며 dts 는 하위 보드를 표현한다.

2. 계층 구조를 유지하기 위해 하위 보드는 상위 보드
   혹은 SoC 의 dts 를 상속받을 수 있으며
   include 문(혹은 C style 의 #include 도 가능)을 사용하여
   상위 보드 혹은 SoC 를 위한 dts 파일을 포함시킬 수 있다.
   (dts 파일 중간에서 포함시키는 것도 가능함)

3. 하위 보드에서 정의한 내용 중,
   상위 보드의 내용과 중복되는 내용은
   하위 보드에서 정의한 내용이 최종적으로 반영되며
   중복되지 않는 내용은 새로 추가된다.
   *.dts 를 살펴보면 &node{} 로 된 부분이 있는데
   앞서 정의한 dts 를 overriding 하는 것이다.

4. SoC 구조를 보면 CPU, Memory, System Bus, Interconnect 들로
   구성되어 있는데 이것들이 모두 node 라고 보면 되겠다.
   OCP 는 On Chip Peripheral 을 의미하며
   각종 Device Controller 를 이 부분에 나열하면 된다.

5. 각각의 node 는 다양한 속성(ex: register, interrupt)가 있으므로
   이를 적절히 표현해 주어야하며 node 간에는
   상호 연관성(ex: interrupt, clock) 이 있을 수 있으니,
   역시 이를 잘 표현(&node 활용)해 주어야 한다.

dtsi 파일(SoC) 와 dts(Board) 가 하나로 통합되어 dtb 가 만들어짐
dtsi 파일은 arch/arm/boot/dts/am57xx-evm-common.dtsi 를 살펴보도록 한다.

그리고 실제 Device Tree 로 표현된 Board Description 은
Kernel Code 에서 참조할 수 있어야하므로
아래의 파일에서 이러한 부분들을 볼 수 있다.
arch/arm/mach-omap2/board-generic.c 를 참고하면 도움이 된다.
compatible 속성과 관련된 부분이 compat 이라는 부분이라고 된 부분들임
