Important Note

이 안내서는 Processor SDK Linux 에 포함된 최신 버전의 Matrix 를 위한 것이다.
이전 Matrix 에 대한 정보를 찾고 있는 경우 아래 링크에서 찾을 수 있다.
이전 버전의 매트릭스 - http://processors.wiki.ti.com/index.php?title=Matrix_Users_Guide&oldid=74107



Supported Platforms

이 버전의 Matrix 는 모든 Sitara 장치는 물론 K2H/K2K, K2E, 그리고 K2L Platform 을 지원한다.



Initial Boot Up

디스플레이 장치가 연결된 Target System(ex: AM335x, AM437x, AM57x Platform)을 처음 부팅하는 Matrix 가 자동으로 시작된다.
Matrix 는 Touchscreen 이나 마우스로 조작할 수 있다.
대부분의 SDK Platform 의 기본 시작은 터치 스크린이다.
아래에서 문제가 발생하면 모든 것을 원활하게 진행할 수 있는 몇 가지 팁이 있다.
Matrix Startup Debug 를 참조하라.

K2H/K2K, K2E 및 K2L Platform 과 같이 표시하지 않고 Target System 을 부팅하면
Matrix 가 부팅 중에 자동으로 시작되지 않고 부팅 후 Remote_Matrix 만 사용할 수 있다.



Overview

Matrix 는 새로운 SW 개발 키트에서 제공되는 사용 가능한 App 과
Demo 를 강조하기 위해 작성된 HTML5 기반 App 실행 프로그램이다.
Local 혹은 Remote Matrix 의 2 가지 형태가 있다.
모든 예제 App 과 Demo 는 Local 혹은 Remote 버전을 사용하여 사용할 수 있다.
Target System 이 부팅될 때 기본적으로 Local Version 을 사용하여 사용할 수 있다.
Target System 이 부팅될 때 기본적으로 Local 버전이 시작되고 사용자 입력을 위해
Target System 의 Touchscreen interface 를 사용한다.
Matrix 는 Display 해상도에 따라 4 x 3 Matrix 의 아이콘 혹은 4 x 2 Matrix 로 제공된다.



Local and Remote Matrix

Local Matrix

Local Matrix 는 Target System 에 연결된 Display 장치에 표시되는 Matrix 를 나타낸다.
Matrix 의 실행 프로그램은 URL http://localhost:80 을 가리키는 Webkit 기본 브라우저를 표시하는 간단한 QT App 이다.

알림:
K2H/K2K, K2E 및 K2L Platform 과 같이 Display 를 지원하지 않는 Platform 에서는 Local Matrix 를 사용할 수 없다.



Remote Matrix

원격 매트릭스란 Target System 에 없는 현대의 모든 Web Browser 에서 실행되는 Matrix 를 가리킨다.

원격 Matrix 의 URL 은 <target>">http://<target system 의 ip 주소> 에 해당한다.

Local Matrix 를 사용하고 설정 아이콘을 클릭한 다음 Network 설정 아이콘을 클릭하여 Target 의 IP Address 를 찾을 수 있다.
혹은 Target System 에 로그인 한 터미널을 사용하여 아래 명령을 입력하라.

ifconfig

표시된 출력에서 eth0 으로 시작하는 Section을 보라.
"inet addr" 바로 뒤에 IP 주소가 표시되어야 한다.
이것은 원격 Matrix 에 사용해야 하는 IP 주소다.

Remote Matrix 를 사용하면 PC, cellphone, tablet 혹은 현대 웹 브라우저가 있는 모든 Device 에서 Matrix 와 상호 작용할 수 있다.
이제 Text 기반 App 이나 Script 를 시작하고 출력을 Web Browser 로 다시 Streaming 할 수 있다!
Matrix 에서 gui App 을 시작하려면 Target System 에 연결된 Display Device 를 계속 봐야 한다.



Matrix Project Webpage

Matrix 의 공식 웹 사이트는 gforge.ti.com/gf/project/matrix-gui-v2/ 이다.
Matrix 에 대한 모든 의견이나 Bug 보고서가 게시되어 있어야 한다.



How to Use the Matrix

Matrix 는 HTML5 를 기반으로 하며 쉽게 사용자 정의를 할 수 있도록 설계되었다.
Matrix 의 모든 App 및 하위 메뉴는 Target System 의 /usr/share/matrix-gui-2.0/apps/ 디렉토리에서 찾을 수 있다.
Matrix 는 .desktop 표준과 몇 가지 추가 매개 변수를 사용하여 App 이나 디렉토리를 쉽게 수정, 추가 및 제거할 수 있다.

Matrix Components

아래는 모든 Matrix Web Pages 의 요약이다:

Menu Pages

각 디렉토리 레벨에 속하는 모든 디렉토리 혹은 App 을 포함한다.

Application Description

- 선택적이며 특정 App 과 연관된다.
- 여러가지 이유로 유용할 수 있는 추가 정보를 제공한다.
- 연결된 App 아이콘을 누르면 표시된다.

Example Application Description Page

아래는 App 설명 페이지의 예다.
설명 페이지는 추가 정보를 추가하는데 사용될 수 있다.

Coming Soon Page

Matrix 디렉토리에 App 을 포함하지 않는 Matrix 디렉토리가 표시된다.

Application/Script Execution Page

콘솔 기반 App 의 경우 App 의 출력 텍스트를 표시한다.

Icons

- 하위 메뉴 혹은 App 과 연결된 96 x 96 png 이미지 파일
- 많은 App 에서 재사용 가능

Applications

- 모든 App 은 Matrix 에서 시작할 수 있다
- Local Matrix 는 Graphics Display Layer 를 사용한다.
  실행된 App 에서도 Graphics Display Layer 를 사용하면 충돌이 발생한다.



Updating Matrix

Matrix 2 는 .desktop 파일에서 읽은 정보와 다양한 PHP 페이지에서 생성된 HTML 을 캐싱하는 캐싱 시스템을 사용한다.
이 기능이 상당한 성능 향상을 가져다 주지만 개발자는 파일 추가, 삭제 및 수정을 포함하는
Matrix apps 폴더를 변경하면 Matrix 에서 많은 문제가 발생할 수 있음을 인식해야 한다.
최신 정보로 Matrix 를 올바르게 업데이트하려면 Matrix 의 캐시를 지워야 한다.



Automatically Clearing Matrix Cache

Matrix 의 Cache 를 지우는 가장 간단한 방법은 Matrix 의 Settings 하위 메뉴에 있는 Refresh Matrix App 을 사용하는 것이다.
App 을 실행하면 Matrix 가 모든 Cached 파일을 지우고 .desktops 캐시 파일을 재생성한다.
App 실행이 완료되면 Matrix 는 apps 폴더에서 찾은 최신 정보로 업데이트 된다.



Manually Clearing Matrix Cache

Matrix Caching System 은 1 개의 파일과 1 개의 디렉토리로 구성된다.
Matrix 의 root 디렉토리에는 json.txt 라는 파일이 들어있다.
Json.txt 는 apps 디렉토리에 있는 모든 .desktop 에서 수집한 정보가 들어있는 JSON 파일이다.
이 파일은 generate.php 파일을 실행하여 생성된다.

또한 Matrix 의 root 디렉토리에 cache 라는 폴더가 있다.
이 폴더에는 다양한 동적 PHP 웹 페이지에서 캐시된 모든 html 파일이 들어있다.

Matrix 의 캐시를 지우려면 아래 2 단계만 수행하면 된다.

1. generate.php 파일을 실행한다.

Target System 의 터미널에 아래 코드를 입력하라.

php generate.php

혹은

브라우저에서 아래 URL 을 입력한다.
<target ip> 를 Target System 의 IP 주소로 바꿔라

<target>">http://<target ip>:80/generate.php

브라우저에서 generate.php 를 볼 때 빈 페이지가 표시된다.
이 웹 페이지에는 시각적 출력이 없다.

2. Matrix 의 캐시 폴더에 있는 파일을 지워야 한다.
    아래 명령을 입력하라.

cd /usr/share/matrix-gui-2.0/cache
rm -r *

위의 단계가 완료되면 Matrix 가 업데이트 된다.



Launching Matrix

Target 터미널 창에서 아래 쉘 스크립트를 사용하여 Matrix 를 백그라운드 작업으로 실행하라.

/etc/init.d/matrix-gui-2.0 start

이 Script 는 touchscreen 이 보정되었고 Qt Window Server 가 실행중인지 확인한다.

또는 다음 전체 구문을 사용하여 Matrix 를 수동으로 시작할 수 있다.

matrix_browser -qws http://localhost:80

Qt Window Server 가 System 에서 실행중인 유일한 Qt App 인 경우 "-qws" 매개변수가 필요하다.

세 번째 매개변수는 App 의 Web Browser 를 이동할 URL 이다.
http://localhost:80 은 Matrix 를 호스팅하는 Target System 의 Web Server 를 가리킨다.



Matrix Startup Debug

아래 항목에서 시작할 때 Matrix 문제를 디버깅하거나 시작시 Matrix 를 비활성화하는 방법에 대해 설명한다.



Touchscreen not working

touchscreen 을 보정하려면 이 wiki 페이지를 참조하라:
Touchscreen 재보정 방법 - http://processors.wiki.ti.com/index.php/How_to_Recalibrate_the_Touchscreen



Matrix is running but I don't want it running

Settings Submenu 로 가서 Exit Matrix App 을 실행하여 Matrix 를 종료하라.
Matrix 를 종료하면 Local Matrix 만 종료된다.
여전히 원격 Matrix 를 사용할 수 있다.
혹은 touchscreen 이 작동하지 않는 경우 console 에서 아래를 입력하라.

/etc/init.d/matrix-gui-2.0 stop



I don't want Matrix to run on boot up

콘솔에서 아래 명령을 입력하라:

cd /etc/rc5.d
mv S97matrix-gui-2.0 K97matrix-gui-2.0

이렇게 하면 부팅할 때 Local Matrix 가 자동으로 시작되지 않는다.



How to Enable Mouse Instead of Touchscreen for the Matrix

아래를 참조하여 Mouse 를 사용할 수 있다.
Matrix GUI 에서 마우스를 사용하는 방법
http://processors.wiki.ti.com/index.php/How_to_use_a_Mouse_instead_of_the_Touchscreen_with_Matrix



How to Switch Display from LCD to DVI out for the Matrix

아래를 참조하여 Display 출력을 전환할 수 있다.
Matrix GUI 에 대한 Display 출력을 전환하는 방법
http://processors.wiki.ti.com/index.php/How_to_Switch_Display_From_Touchscreen_to_DVIout_with_Matrix



Adding a New Application/Directory to Matrix

아래에 단계별 지침이 있다.

1. /usr/share/matrix-gui-2.0/apps 에 Target Filesystem 상의 새로운 폴더를 생성한다.
    이름은 App 이나 디렉토리가 무엇인지 명시해주는 것이 좋다.
    폴더 이름은 해당 위치의 기존 폴더와 달라야 한다.

2. 아래 설명된 매개 변수를 기반으로 .desktop 파일을 만든다.
    새로 생성된 폴더의 이름과 desktop 파일의 이름을 일치시키는 것이 좋다.
    .desktop 파일 이름에 공백을 사용할 수 없다.
    .desktop 파일 매개 변수는 Matrix 에 새로운 App 이나 새 디렉토리를 추가할 것인지 여부에 따라 설정해야 한다.
    Type 필드는 결정에 따라 설정되어야 한다.
    .desktop 파일에는 .desktop 접미어가 있다.

3. .desktop 아이콘 필드를 업데이트하여 /usr/share/matrix-gui-2.0 디렉토리 혹은 하위 디렉토리의 기존 아이콘을 참조하라.
     새로운 96 x 96 png Image 를 추가하고 새로 만든 폴더에 저장할 수도 있다.

4. 선택적으로 App 에 대해 App 설명을 포함하는 HTML 파일을 새로 작성한 디렉토리에 추가할 수 있다.
    설명 Page 를 추가하면 .desktop 파일의 X-Matrix-Description 필드를 업데이트하라.

5. 설정 하위 메뉴의 "Refresh Matrix" App 을 사용하여 Matrix 를 새로 고친다.

Matrix 에서 새로운 App 을 실행하라!
아래의 예를 참조하라:
Examples

Matrix 용 빈 템플릿 아이콘은 아래에서 찾을 수 있다:
https://gforge.ti.com/gf/download/frsrelease/712/5167/blank_icons_1.1.tar.gz



Creating the .Desktop File

.desktop 파일은 standards.freedesktop.org/desktop-entry-spec/latest/ 에 지정된 표준을 기반으로 한다.
Matrix 에 고유한 추가 필드가 추가되었다.

각 매개 변수의 형식:

<Field>=<Value>

필드와 값은 대소 문자를 구별한다.



Examples

Creating a New Matrix Directory

아래 파일에서 모든 파일을 얻을 수 있다:
http://processors.wiki.ti.com/images/7/7d/Ex_directory.tar.gz

ex_directory 라는 디렉토리를 만든다.
hello_world_dir.desktop 이라는 새 파일을 만든다.
파일의 내용을 아래 표시된 Text 로 채운다.

#!/usr/bin/env xdg-open
[Desktop Entry]
Name=Ex Demo
Icon=/usr/share/matrix-gui-2.0/apps/ex_directory/example-icon.png
Type=Directory
X-MATRIX-CategoryTarget=ex_dir
X-MATRIX-DisplayPriority=5

이 .desktop 은 Matrix 에게 .desktop 이 Type=Directory 이후 새 디렉토리를 만들기 위한 것임을 알린다.
디렉토리 이름은 "Ex Demo" 여야하고 ex_directory 디렉토리에 있는 아이콘을 사용한다.
이 새 디렉토리는 X-MATRIX-DisplayPriority=5 를 지정하고
Matrix 기본 메뉴에 표시되는 다른 .desktop 파일이 없는한 표시된 5 번째 아이콘이어야 한다.
이제 이 디렉토리에 표시하려는 모든 App 은 .desktop 범주 매개변수를 ex_dir 로 설정해야 한다.

- 때때로 Linux 는 .desktop 파일의 이름을 Name 필드에 지정된 이름으로 바꾼다.
  이 경우 지정된 파일명을 사용하도록  강요하는 것에 대해 걱정하지말라.
- Windows 에서 이 파일을 작성하는 경우 Unix-style EOL 문자를 사용해야 한다.

이제 .desktop 파일과 이미지를 작성된 ex_directory 디렉토리로 이동하라.



Moving the Newly created Directory to the Target's File System

Linux 터미널을 열고 ex_directory 가 있는 디렉토리로 이동하라.

ex_directory 를 Target 의 파일 시스템이 있는 /usr/share/matrix-gui-2.0/apps/ 디렉토리에 복사하려면 아래 명령을 입력하라.
targetNFS 디렉토리 전제 조건에 따라 cp 명령 앞에 sudo 를 포함시켜야 할 수도 있다.

cp ex_directory ~/ti-processor-sdk-linux-[platformName]-evm-xx.xx.xx.xx/targetNFS/usr/share/matrix-gui-2.0/apps/

NFS 가 사용되지 않으면 ex_directory 를 Target 의 Filesystem 에 있는 /usr/share/matrix-gui-2.0/apps 디렉토리에 복사해야 한다.



Updating Matrix

이제 Local 혹은 Remote Matrix 에서 설정 디렉토리로 이동하여 클릭하고 Refresh Matrix App 을 구동한다.
이러면 Matrix 가 생성한 모든 Cache 파일이 삭제되고 사용자가 작성한 모든 업데이트가 포함된 필요한 모든 파일이 재생성된다.

Matrix 의 메인 메뉴로 돌아가면 5 번째 아이콘이 Ex 데모 아이콘이 된다.



Creating a New Application

이 예에서 새로운 Matrix 디렉토리 예를 완료했다고 가정한다.
아래 파일에서 모든 Image 파일을 얻을 수 있다:
http://processors.wiki.ti.com/images/b/b0/Ex_application.tar.gz
ex_application 이라는 새로운 디렉토리를 만든다.
test.desktop 이라는 파일을 만든다.
파일 내용을 아래 text 로 채운다:

#!/usr/bin/env xdg-open
[Desktop Entry]
Name=Test App
Icon=/usr/share/matrix-gui-2.0/apps/ex_application/example-icon.png
Exec=/usr/share/matrix-gui-2.0/apps/ex_application/test_script.sh
Type=Application
ProgramType=console
Categories=ex_dir
X-Matrix-Description=/usr/share/matrix-gui-2.0/apps/ex_application/app_desc.html
X-Matrix-Lock=test_app_lock

Type=Application 은 이 .desktop 이 App 용임을 Matrix 에 알린다.
App 의 이름은 "Test App" 이다.
아이콘 example-icon.png 는 ex_application 디렉토리에서 찾을 수 있다.
실행할 명령은 ex_application 내에 위치하는 Shell Script 다.
실행되는 Script 는 Text 를 터미널에 출력하는 단순한 Shell Script 다.
따라서 ProgramType 을 console 로 설정해야 한다.
이 Application 은 이전 예의 ExDemo 디렉토리에 추가되어야 한다.
그러므로 범주는 X-MATRIX-CategoryTarget 이 설정된 값과 동일한 ex_dir 로 설정된다.
Matrix 의 주 메뉴에 이 App 을 표시하려면 Categories 필드를 선택적으로 제거할 수 있다.
이 App 에는 설명 페이지도 있다.
사용할 html 파일은 ex_application 디렉토리 내에 있다.
Lock 또한 사용될 수 있다.
따라서 동일한 Lock 을 가진 자체 App 을 포함한 다른 App 은 동시에 실행할 수 없다.

test_script.sh 라는 파일을 만든다.

echo "You are now running you first newly created application in Matrix"
echo "I am about to go to sleep for 30 seconds so you can test out the lock feature if you want"
sleep 30
echo "I am finally awake!"

새로 생성된 Script 는 실행 권한이 설정되어야 한다.
Script 에 대한 모든 사용자 및 Group 에 읽기, 쓰기, 실행 권한을 부여하려면 아래 명령을 입력한다.

host $ chmod 777 test_script.sh

app_desc.html 이라는 새로운 파일을 만든다.

<h1>Test Application Overview</h1>
<h2>Purpose:</h2>
<p>The purpose of this application is to demonstrate the ease in adding a new application to Matrix.</p>

이제 Ex_application.tar.gz 파일에 있는 .desktop 파일, script 파일, png image 및 html 파일을 ex_application 폴더로 이동시킨다.



Moving the newly created Directory to the Target System

Linux 터미널을 열고 ex_application 디렉토리가 있는 디렉토리로 이동하라.

아래 명령을 입력하여 Target Filesystem 에 있는 /usr/share/matrix-gui-2.0/apps/ 에 ex_application 디렉토리를 복사하라.
targetNFS 디렉토리 권한에 따라 cp 명령 앞에 sudo 를 포함시켜야 할 수도 있다.

host$ cp ex_application ~/ti-processor-sdk-linux-[platformName]-evm-xx.xx.xx.xx/targetNFS/usr/share/matrix-gui-2.0/apps/

NFS 를 사용하지 않고 SD 카드를 사용하는 경우
ex_application 을 Target 의 Filesystem 에 있는 /usr/share/matrix-gui-2.0/apps/ 디렉토리에 복사하라.



Updating Matrix

이제 Local 혹은 Remote Matrix 에서 설정 디렉토리로 이동하고 클릭한 후 Refresh Matrix application 을 구동한다.
이렇게 하면 Matrix 가 생성한 모든 Cache 파일이 삭제되고 사용자가 작성한 모든 Update 가 포함된 필요한 모든 파일이 다시 생성된다.

이제 Matrix 의 메인 메뉴로 돌아가서 Ex Demo 디렉토리를 클릭하면 새로 생성된 App 을 볼 수 있다.
App 의 아이콘을 클릭하면 APp 의 설명 페이지가 나타난다.
실행 버튼을 클릭하면 App 이 실행된다.
Local 및 Remote Matrix 를 통해 이 App 의 Instance 2 개를 동시에 실행하려고 하면
Lock 이 존재하기 때문에 Program 을 실행할 수 없다는 메시지가 나타난다.
test_app_lock 으로 설정된 X-Matrix-Lock 때문에
Matrix 는 같은 Lock 을 공유하는 2 개의 Program 인스턴스를 동시에 실행하지 않는다.
이전 App 의 실행이 끝나면 App 을 다시 실행할 수 있다.

모든 가능한 매개변수를 사용하여 Matrix 에 새로운 App 을 추가했다!



원문 - http://processors.wiki.ti.com/index.php/Matrix_Users_Guide
