BOSCH CAN Specification Version 2.0

Recital 상설
점점 더 많은 응용 프로그램에 대한 직렬 통신의 수용 및 도입은 통신 기능에 대한 메시지 식별자의 할당이 특정 응용 프로그램에 대해 표준화되어야한다는 요구 사항을 야기했습니다. 원래 11 개의 식별자 비트로 정의 된 주소 범위가 확장되면 이러한 응용 프로그램을 CAN을 통해 더 쉽게 구현할 수 있습니다. 따라서 29 비트로 정의 된 더 큰 주소 범위를 제공하는 두 번째 메시지 형식 ( '확장 형식') 이 도입되었습니다. 이렇게 하면 구조화가 잘된 명명 체계를 정의하는 것과 관련하여 시스템 설계자를 해치지 않아도됩니다. 확장 된 형식으로 제공되는 식별자 범위가 필요없는 CAN 사용자는 기존의 11 비트 식별자 범위 ( '표준 형식')를 계속 사용할 수 있습니다. 이 경우 시장에서 이미 사용 가능한 CAN 구현 또는 두 가지 형식을 구현하는 새로운 컨트롤러를 사용할 수 있습니다. 
표준 및 확장 형식을 구별하기 위해 CAN 규격 1.2에 정의 된대로 CAN 메시지 형식의 첫 번째 예약 비트가 사용됩니다. 이는 CAN Specification 1.2의 메시지 형식이 표준 형식과 동일하므로 여전히 유효합니다. 또한 표준 형식 및 확장 형식의 메시지가 동일한 네트워크 내에서 공존 할 수 있도록 확장 형식이 정의되었습니다.

이 CAN 사양은 다음 두 부분으로 구성됩니다.
-  CAN 규격 1.2에 정의 된 CAN 메시지 형식을 설명하는 Part A
-  표준 및 확장 메시지 형식을 모두 설명하는 파트 B

이 CAN 사양 2.0과 호환되기 위해서는 CAN 구현이 Part A 또는 Part B와 호환되어야합니다.


Note 
CAN의 파트 A 또는 이전 CAN 스펙에 따라 설계된 CAN 구현과 본 스펙의 파트 B에 따라 설계된 CAN 구현은 확장 된 형식을 사용하지 않는 한 서로 통신 할 수 있습니다.











PART A

1 INTRODUCTION................................................................................4
소개
2 BASIC CONCEPTS............................................................................5
기본 개념

3 MESSAGE TRANSFER .....................................................................10
메시지 전송
3.1 Frame Types ......................................................................................10
프레임 유형
3.1.1 DATA FRAME ....................................................................................10
데이터 프레임
3.1.2 REMOTE FRAME ..............................................................................15
원격 프레임
3.1.3 ERROR FRAME.................................................................................16
오류 프레임
3.1.4 OVERLOAD FRAME..........................................................................17
오버로드 프레임
3.1.5 INTERFRAME SPACING...................................................................18
프레임 간 간격
3.2 Definition of TRANSMITTER/RECEIVER ..........................................20
트랜스미터 / 리시버의 정의

4 MESSAGE VALIDATION ...................................................................21
메시지 확인
5 CODING.............................................................................................22
코딩

6 ERROR HANDLING...........................................................................23
오류처리
6.1 Error Detection ...................................................................................23
오류감지 
6.2 Error Signalling...................................................................................23
오류 신호

7 FAULT CONFINEMENT.....................................................................24
잘못된 구성
8 BIT TIMING REQUIREMENTS ..........................................................27
비트 타이밍 요구사항


9 INCREASING CAN OSCILLATOR TOLERANCE..............................31
증가하는 오실레이터 공차
9.1 Protocol Modifications ........................................................................31
프로토콜 수정


1 INTRODUCTION 소개
CAN (Controller Area Network)은 매우 높은 수준의 보안으로 분산 된 실시간 제어를 효율적으로 지원하는 직렬 통신 프로토콜입니다. 이 제품의 적용 범위는 고속 네트워크에서 저가의 멀티 플렉스 배선까지 다양합니다. 자동차 전자 장치에서 엔진 제어 장치, 센서, 스키드 방지 시스템 등은 CAN을 사용하여 최대 1Mbit / s의 비트율로 연결됩니다. 동시에 차체 전자 장치를 제작하는 것이 비용면에서 효율적입니다. 램프 클러스터, 전기 창 등 필요한 경우 와이어 링 하네스를 교체하십시오. (뭔소린지;; lamp clusters, electric windows etc. to replace the wiring harness otherwise required)
이 사양의 의도는 두 CAN 구현 간의 호환성을 달성하는 것입니다. 그러나, 호환성은 예를 들어, 전기 특성 및 전송할 데이터의 해석 설계 투명성과 구현 유연성을 달성하기 위해 CAN은 다른 계층으로 세분되었습니다.

- (CAN-) 객체 계층
- (CAN-) 전달 층
- 물리 계층

객체 계층과 전송 계층은 ISO / OSI 모델에 의해 정의 된 데이터 링크 계층의 모든 서비스와 기능을 포함합니다. 객체 계층의 범위에는 다음이 포함됩니다.

- 어떤 메시지가 전송 될지 찾기
- 전송 계층에 의해 수신 된 메시지가 실제로 사용될 것인지를 결정하고,
- 어플리케이션 계층 관련 하드웨어에 대한 인터페이스를 제공합니다.

객체 처리를 정의하는 데는 많은 자유가 있습니다. 전송 계층의 범위는 주로 전송 프로토콜, 즉 프레이밍(framing) 제어, 중재, 오류 검사, 오류 신호 및 오류 감금을 수행하는 것 입니다. 전송 계층 내에서 버스가 새로운 전송을 시작하기 위해 자유로운지 또는 수신이 방금 시작 중인지 여부가 결정됩니다. 또한 비트 타이밍의 일부 일반적인 기능은 전송 계층의 일부로 간주됩니다. 전송 계층의 특징 상, 변경을 위한 자유가 없습니다.
물리 계층의 범위는 모든 전기적 특성에 대해 서로 다른 노드 사이의 비트 전송을 의미합니다. 물론 하나의 네트워크 내에서 물리적 계층은 모든 노드에 대해 동일해야합니다. 그러나 물리 계층을 선택할 때 많은 자유가 있을 수 있습니다.
이 규격의 범위는 전송 레이어와 그 주변 레이어에 대한 CAN 프로토콜의 결과를 정의하는 것 입니다.

2 BASIC CONCEPTS 기본 개념
CAN은 다음과 같은 속성을 가집니다.

- 메시지의 우선 순위 지정
- 대기 시간 보장
- 구성 유연성
- 시간 동기화 된 멀티 캐스트 수신
- 시스템 전반의 데이터 일관성
- 멀티 마스터
- 오류 감지 및 신호 처리
- 버스가 다시 유휴 상태가 되는 즉시 손상된 메시지의 자동 재전송
- 일시적인 오류와 노드의 영구적인 실패와 결함 노드의 자율적인 전환 사이의 구별

CAN 노드의 계층화 된 구조

응용 계층

객체 계층
- 메시지 필터링
- 메시지 및 상태 처리
전송 계층
- 결함 제한
- 오류 감지 및 신호
- 메시지 유효성 검사
- 승인(Acknowledgment)
- 중재
- 메시지 프레이밍(Framing)
- 전송 속도 및 타이밍
물리 계층
- 신호 레벨 및 비트 표현
- 전송 매체



- 물리 계층은 신호가 실제로 전송되는 방법을 정의합니다. 이 규격 내에서 물리 계층은 전송 매체 및 신호 레벨 구현이 자신의 애플리케이션에 맞게 최적화 될 수 있도록 정의되지 않습니다.

- 전송계층은 CAN 프로토콜의 커널을 나타냅니다. 그것은 수신 된 메시지를 객체 계층에 제시하고 객체 계층에서 전송할 메시지를 받아들입니다. 전송 계층은 비트 타이밍 및 동기화, 메시지 프레이밍, 중재, 수신 확인, 오류 감지 및 신호 처리, 오류 제한을 담당합니다.

- 객체 계층은 상태 및 메시지 처리뿐만 아니라 메시지 필터링과 관련이 있습니다.

이 규격의 범위는 전송 레이어와 그 주변 레이어에 대한 CAN 프로토콜의 결과를 정의하는 것이다. 

Messages 메시지
버스에 대한 정보는 길이가 다르지만 제한적인 고정된 형식의 메시지로 전송됩니다. ( 3절 : 메시지 전송 참조). 버스가 해제되면 연결된 장치가 새 메시지를 전송하기 시작할 수 있습니다.

Information Routing 정보 라우팅
CAN 시스템에서 CAN 노드는 시스템 구성에 관한 정보를 사용하지 않습니다. (e.g. station addresses). 여기에는 몇 가지 중요한 결과가 있습니다.

System Flexibility 시스템 유연성
노드 및 응용 프로그램 계층의 소프트웨어 또는 하드웨어를 변경하지 않고도 노드를 CAN 네트워크에 추가 할 수 있습니다. 

Message Routing 메시지 라우팅
메시지의 내용은 IDENTIFIER에 의해 명명됩니다. IDENTIFIER는 메시지의 목적지를 나타내지 않으며, 데이터의 의미를 기술하여 네트워크의 모든 노드가 메시지 필터링을 통해 데이터가 해당 데이터에 따라 작동하는지 여부를 결정할 수 있습니다.

Multicast 멀티캐스트
MESSAGE FILTERING의 개념의 결과로서, 임의의 수의 노드가 동일한 메시지를 수신하고 동시에 행동 할 수 있습니다.

Data Consistency 데이터 일관성
CAN 네트워크 내에서 모든 노드 또는 노드가 동시에 메시지를 받아 들일 수 있습니다. 따라서 시스템의 데이터 일관성은 멀티 캐스트 및 오류 처리의 개념에 의해 달성됩니다.


Bit rate 비트 전송률
CAN의 속도는 시스템마다 다를 수 있습니다. 그러나 주어진 시스템에서 비트율은 일정하고 고정되어 있습니다.

Priorities 우선 순위
IDENTIFIER는 버스 액세스 중에 정적 메시지 우선 순위를 정의합니다.

Remote Data Request 원격 데이터 요청
REMOTE FRAME을 송신함으로써, 데이터를 필요로 하는 노드는 다른 노드에 대응하는 데이터 프레임을 송신하도록 요구할 수 있습니다. DATA FRAME과 해당 REMOTE FRAME은 동일한 IDENTIFIER에 의해 명명됩니다.

Multimaster 멀티 마스터
버스가 비어있는 경우 모든 유닛이 메시지를 전송하기 시작할 수 있습니다. 전송 될 더 높은 우선 순위의 메시지를 갖는 유닛은 버스 액세스를 얻습니다. 

Arbitration 중재
버스가 사용 가능할 때마다 모든 장치가 메시지 전송을 시작할 수 있습니다. 둘 이상의 장치가 동시에 메시지 전송을 시작하면 IDENTIFIER를 사용하는 비트 단위 중재에 의해 버스 액세스 충돌이 해결됩니다. 중재의 메커니즘은 정보나 시간이 손실되지 않는다는 것을 보장합니다. 동일한 IDENTIFIER가 있는 DATA FRAME과 REMOTE FRAME이 동시에 시작되면 DATA FRAME이 REMOTE FRAME보다 우선합니다. 중재가 진행되는 동안 모든 송신기는 전송된 비트의 레벨을 버스에서 모니터되는 레벨과 비교합니다. 이 레벨이 같으면 유닛은 계속해서 보낼 수 있습니다. '열성' 레벨이 전송되고 '우성' 레벨이 모니터링되면 (버스 값 참조) 유닛은 중재를 잃고 한 번 더 보내지 않고 철회해야합니다.

Safety 안전
데이터 전송의 최대한의 안전성을 확보하기 위해 모든 CAN 노드에서 오류 감지, 신호 및 자가 점검을 위한 강력한 조치가 구현됩니다. 

  Error Detection 오류 감지
  오류를 탐지하기 위해 다음과 같은 조치가 취해졌습니다.
  - 모니터링 (송신기는 전송할 비트 레벨을 버스에서 감지 된 비트 레벨과 비교)
  - 순환 중복 검사 (Cyclic Redundancy Check)
  - 비트 채우기 (Bit Stuffing)
  - 메시지 프레임 확인
Performance of Error Detection 오류 감지 성능
오류 감지 메커니즘에는 다음과 같은 특성이 있습니다. 

- 모든 전역 오류가 감지됩니다.
- 송신기의 모든 로컬 오류가 감지됩니다.
- 메시지에 최대 5개의 임의로 분산된 오류가 감지됩니다.
- 메시지에서 길이가 15 미만인 버스트 오류가 감지됩니다.
- 메시지에서 홀수 번호의 오류가 감지됩니다.

발견되지 않은 손상된 메시지에 대한 총 잔여 오류 확률 : 보다 작음

message error rate * 4.7 * 10 ^ -11.

Error Signalling and Recovery Time 오류 신호 및 복구 시간
손상된 메시지는 오류를 감지하는 모든 노드에 의해 플래그가 지정됩니다. 이러한 메시지는 중단되고 자동으로 재전송됩니다. 더 이상의 오류가 없는 경우, 오류 감지에서 다음 메시지 시작까지의 복구 시간은 최대 29 비트입니다. 

Fault Confinement 결함 제한
CAN 노드는 짧은 장애를 영구 장애와 구별 할 수 있습니다. 결함 노드는 스위치 오프 됩니다.

Connections 연결
CAN 직렬 통신 링크는 여러 장치가 연결될 수 있는 버스입니다. 이 숫자에는 이론적인 제한이 없습니다. 실질적으로 총 유닛 수는 버스 라인의 지연 시간 및 / 또는 전기 부하에 의해 제한됩니다.

Single Channel 단일 채널
버스는 비트를 운반하는 단일 채널로 구성됩니다. 이 데이터로부터 재동기화 정보가 도출 될 수있습니다. 이 채널이 구현되는 방식은 고정되어 있지 않습니다. 이 채널이 구현되는 방식은 이 사양에서 수정되지 않았습니다. 예 : 단일 와이어 (플러스 접지), 2 개의 차동 와이어, 광섬유 등


Bus values 버스 값
버스는 두 개의 상보적인 논리 값 중 하나를 가질 수 있습니다 : '우성' 또는 '열성'. '우성' 및 '열성' 비트를 동시에 전송하는 동안 결과 버스 값은 '우성' 이됩니다. 예를 들어, 버스의 wired-AND 구현의 경우 '우성' 레벨은 논리 '0'으로 표시되고 '열성' 레벨은 논리 '1'로 표시됩니다. 논리 레벨을 나타내는 물리적 상태 (예를 들어, 전압, 빛)는 본 논문에서 제시되지 않습니다. 

Acknowledgment 승인
모든 수신자는 수신중인 메시지의 일관성을 검사하고 일관된 메시지를 확인하고 일치하지 않는 메시지에 플래그를 지정합니다. 

Sleep Mode / Wake-up 절전 모드 / 웨이크 업
시스템의 전력 소비를 줄이기 위해 CAN 장치는 내부 활동 및 연결이 끊어진 버스 드라이버 없이 절전 모드로 설정 될 수 있습니다. 절전 모드는 모든 버스 작동 또는 시스템의 내부 조건에 의해 웨이크 업 (wake-up)으로 완료됩니다. 웨이크 업에서는 전송 계층이 시스템의 오실레이터가 안정화 될 때까지 대기하지만 내부 액티비티가 다시 시작되고 버스 드라이버가 "온-버스" 로 다시 설정되기 전에 그 자체가 버스 활동(11개의 연속적인 '열성' 비트 확인)과 동기화 될 때까지 대기합니다. 절전 모드에 있는 시스템의 다른 노드를 깨우기 위해 가장 낮은 가능 식별자 (rrr rrrd rrrr; r = '열성 recessive' d = '우성 dominant')가 있는 특수 wake-up 메시지가 사용될 수 있습니다 .
