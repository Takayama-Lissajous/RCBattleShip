Linux 의 직렬 USB Driver 에는 Sealevel 장치용 제품 ID 가 많이 포함되어 있다.
그러나 최신 장치는 현재 Driver 에 포함되어 있지 않을 수 있다.
이 Guide 는 Driver Load 시간 매개 변수를 사용하는 USB Device 설치 지침
혹은 Device 를 기본적으로 지원하기 위해 Device Driver 를 수정하는 예제로 구성된다.
Linux 배포판마다 미묘한 차이가 있다.
모든 배포판에서 발생하는 충돌 문제는
소스 코드 드라이빙을 수행하며 진행하는 수 밖에 없다.

옵션 1: 직렬 USB 설치 지침(재 컴파일 필요 없음)

알림:

* '$' 로 시작하는 명령은 사용자 레벨 특권으로 동작한다.
* '#' 이 붙은 명령에는 루트 수준의 권한이 필요하다.
* 이 방법은 단일 및 이중 포트 장치에서만 작동한다.
  둘 이상의 포트가 있는 장치는 Driver 수정 및 재 컴파일이 필요하다(옵션 2 참조)

1) Sealevel USB Device 를 연결한다.

2) 터미널 창을 열고 루트 권한을 얻는다.
   이것은 배포판에 따라 다르지만
   가장 일반적인 방법은 아래에 설명된 것처럼 su 명령을 사용하는 것이다.
   (우리의 AM5728 에서는 자동으로 root 권한이므로 별도의 작업은 필요없다)

3) USB Sub-System 이 Device 를 감지했는지 확인하라.
   이는 아래에 설명된대로 lsusb 명령을 사용하여 수행할 수 있다.
   -s 0c52 매개 변수는 시스템의 USB Sub-System 에 연결된
   Sealevel Device 에 대한 정보만 반환한다.
   이 예에서는 Device Driver 를 Sealevel Seal / O U-Series 데이터 수집 모듈에 사용되는
   USB 2 RS-485 Bridge 인 e402 Sealevel HW 에 연결한다.

# lsusb -s 0c52

4) 모든 FTDI 기반 USB Serial Devices 에 대한
   Kernel Driver Module 은 부팅시 자동 Load 되도록 구성된다.
   배포판에 따라 Driver 가 이미 Load 되어 있는 경우 Driver 를 Un-Load 해야할 수도 있다.
   이는 아래 명령을 실행하여 수행할 수 있다.
   이 명령은 Driver 가 Load 되지 않은 상태에서 문제 없이 실행할 수 있다.

# modprobe -r ftdi_sio

5) Linux 의 FTDI Serial USB Driver 에는
   Sealevel Device 에 대한 많은 제품 ID 가 포함되어 있다.
   그러나 최신 Device 는 현재 Driver 에 포함되어 있지 않을 수도 있다.
   Driver 를 사용하면 단일 공급 업체 및 제품을 위한 별도의 Module 을 Load 할 수 있다.
   이 매개 변수를 사용하면 Driver 를 다시 Compile 할 필요가 없다.
   FTDI Driver 에게 Sealevel Device 의 식별 정보를 알리려면 아래 명령을 실행하라.

# modprobe ftdi_sio vendor=0x0C52 product=0xE402

6) Driver 는 이제 Sealevel Device 를 식별하고 통신할 준비가 되었다.
   이제 Device 와 Interface 하는데 사용되는 Character Special File 을 만들어야할 수도 있다.
   최신 배포본에는 Device Driver 에서 파일을 식별할 때
   /dev 파일 시스템에 이러한 파일을 자동으로 만드는 방법이 포함되어 있다.
   Character Special File 은 일반적으로 ttyUSB # 명명법을 사용한다.
   아래 명령을 실행하여 작성을 검증하라.

# ls -al /dev/ttyUSB*

7)  Character Special Files 가 자동으로 작성되지 않았거나
    둘 이상의 Character Special File 이 표시되면
    Driver 의 Major 번호와 Minor 번호를 식별해야 한다.
    아래 명령에서 보듯이 /proc 파일 시스템의
    devices 파일을 검색하여 Driver Major 를 결정할 수 있다.

# cat /proc/devices | grep -i "ttyUSB"

Device Minor 번호는 /proc 파일 시스템에 있는 파일을 검색하여 확인할 수도 있다.
tty 디렉토리에는 현재 Load 된 모든 tty Driver 에 대한 정보가 들어 있다.
다음 명령을 실행하면 현재 Load 된 USB Serial Driver 가 감지한
모든 USB Serial 포트 목록이 표시된다.
여러 USB Serial 포트가 시스템에 감지되면 공급 업체
및 제품 ID 를 확인하여 Sealevel Device 에 해당하는 제품을 확인하라.

# cat /proc/tty/driver/usbserial

8) 6 단계에서 Sealevel Device 의 Character Special File 이 없으면
   아래 명령을 실행하여 만들 수 있다.
   또한 현재 존재하지 않는 다른 USB Serial Device 에 해당하는
   Special File 을 추가로 만드는 것이 유용할 수 있다.
   아래 나열된 주 번호와 부 번호는 System 마다 다를 수 있으므로
   7 단계에 나와 있는 명령으로 나열된 번호를 바꿔야 한다.

# mknod /dev/ttyUSB0 c 188 0
# mknod /dev/ttyUSB1 c 188 1

9) User App 은 7 단계에서 결정된 것과 일치하는 Major 번호와 Minor 번호가 있는
   Character Special File 을 통해 Sealevel Device 와 상호 작용할 수 있다.
   /dev 파일 시스템의 Character Special File 과
   연관된 Major 번호와 Minor 번호를 확인하려면 ls 명령을 사용하라.
   Major/Minor 는 각 파일에 대해 노란색으로 강조 표시된다.

# ls -al /dev/ttyUSB*

10) Sealevel Device 에 접근해야하는 모든 User 가 이렇게 할 수 있는지 확인하라.
    시스템 및 요구 사항에 따라 파일 사용 권한을 구성하여
    이를 수행할 수 있는 여러 가지 방법이 있다.
    chmod 및 chown 명령에 대한 배포 설명서를 참조해야한다.
    모든 USB Serial Device 에 대한 모든 접근을 허용하려면 아래 명령을 사용하라.

# chmod 777 /dev/ttyUSB*

이제 Sealevel Device 는 Device 의 Majro / Minor 에
해당하는 Character Special File 을 통해 접근할 수 있다.
여기에 표시된 예에서 파일은 /dev/ttyUSB1 이다.



옵션 2: Serial USB 설치 지침(Hardcoded Driver Support)

Notes:

* '$' 로 시작하는 명령은 사용자 레벨에서 수행된다.
* '#' 이 붙은 명령은 root 수준의 권한이 필요하다.
* 이것은 2 개 이상의 포트가 있는 Device 가 Linux 에서 작동하는 유일한 방법이다.
* 이 방법을 사용하려면 전체 Kernel Source 가 필요하다.
  (수집 및 구성에 대한 구체적인 지침은 삽질과 문서화 뿐이다)

1) Kernel Source 디렉토리에 있는 ftdi_sio.h 파일을 연다.
   $(TOPDIR)/drivers/usb/serial/ftdi_sio.h

2) SEALEVEL_VID 를 검색하라.
   그러면 Sealevel USB Serail Device 에 대한 #define 목록이 나타난다.

3) 위쪽의 3 단계에서 설명한대로 lspci 명령으로
   발견된 각 Sealevel 목록에 대해 새 항목을 추가하라.

...
#define SEALEVEL_2803_8_PID 0x2883 // SeaLINK+8 2803
#define SEALEVEL_E402_PID   0xE402 // << 새로운 E402 product ID 추가
...

4) 변경 사항을 닫고 헤더 파일에 저장한다.

5) ftdi_sio.c 파일을 연다.
   헤더 파일과 동일한 디렉토리에 있다.

6) SEALEVEL_VID 를 검색한다.
   일련의 공급 업체 / 제품 ID 구조로 이동하게 된다.

7) 3 단계에서 추가한 새로운 #define 에 대해 새 항목을 추가하라.

...
{ USB_DEVICE(SEALEVEL_VID, SEALEVEL_2803_8_PID) },
{ USB_DEVICE(SEALEVEL_VID, SEALEVEL_E402_PID) }, // << 새로운 E402 ID 추가
...

8) Kernel Driver Module 을 다시 컴파일하라!

# cd $(TOPDIR)
# make modules && make modules_install

9) 이제 ftdi_sio Kernel Module 을 다시 Load 한다.

# modprobe -r tfdi_sio
# modprobe ftdi_sio

10) 위의 옵션 1 의 6 단계부터 계속하라.
